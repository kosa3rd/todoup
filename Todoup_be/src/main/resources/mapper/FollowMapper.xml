<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.todoup.mapper.FollowMapper">

    <!-- 내가 팔로우한 사람들 / 팔로잉 -->
    <select id="findFollowing" parameterType="long" resultType="com.kosa.todoup.dto.FollowDTO">
        SELECT
            f.user_id AS userId,
            f.follow_id AS followId,
            u1.user_id AS userId1,
            u1.email AS userEmail,
            u1.nickname AS userNickname,
            u1.avatar_type AS userAvatarType,
            u1.password AS userPassword,
            u1.lv,
            u1.points AS points,
            u1.created_at AS userCreatedAt,
            u2.user_id AS followUserId,
            u2.email AS followUserEmail,
            u2.nickname AS followNickname,
            u2.avatar_type AS followUserAvatarType,
            u2.password AS followUserPassword,
            u2.lv AS followUserLv,
            u2.points AS followUserPoints,
            u2.created_at AS followUserCreatedAt,
            a.img_url AS imgUrl
        FROM
            follow f
                JOIN
            users u1 ON f.user_id = u1.user_id
                JOIN
            users u2 ON f.follow_id = u2.user_id
                JOIN
            avatar_list a ON u2.avatar_type = a.avatar_type AND u2.lv = a.lv
        WHERE
            f.user_id = #{userId}
          AND u2.user_id != #{userId}
    </select>
    <!--  팔로잉 하기  -->
    <insert id="insertFollow" >
        INSERT INTO follow (user_id, follow_id)
        VALUES (#{userId}, #{followId})
    </insert>

    <!-- 팔로잉 취소  -->
    <delete id="deleteFollow" >
        DELETE FROM follow
        WHERE user_id = #{userId}
          AND follow_id = #{followId}
    </delete>

    <!-- 팔로잉 확인-->
    <select id="isFollowing" resultType="boolean">
        SELECT COUNT(*)
        FROM follow
        WHERE user_id = #{userId}
          AND follow_id = #{followId}
    </select>

    <!-- 나를 팔로우한 사람들 / 팔로워 -->
    <select id="findFollowers"  resultType="com.kosa.todoup.dto.FollowDTO">
        SELECT
            f.user_id AS userId,
            f.follow_id AS followId,
            u1.user_id AS userId1,  -- DTO에서 사용된 필드명과 일치하도록 수정
            u1.email AS userEmail,
            u1.nickname AS userNickname,
            u1.avatar_type AS userAvatarType,
            u1.password AS userPassword,
            u1.lv AS lv,  -- lv는 u1과 u2 모두에서 동일한 필드명을 사용합니다.
            u1.points AS points,  -- DTO에서 'points'로 정의됨
            u1.created_at AS userCreatedAt,
            u2.user_id AS followUserId,
            u2.email AS followUserEmail,
            u2.nickname AS followNickname,
            u2.avatar_type AS followUserAvatarType,
            u2.password AS followUserPassword,
            u2.lv AS followUserLv,  -- u2의 lv는 'followUserLv'로 매핑
            u2.points AS followUserPoints,
            u2.created_at AS followUserCreatedAt,
            a.img_url AS imgUrl
        FROM
            follow f
                JOIN users u1 ON f.user_id = u1.user_id
                JOIN users u2 ON f.follow_id = u2.user_id
                JOIN avatar_list a ON u2.avatar_type = a.avatar_type AND u2.lv = a.lv
        WHERE
            f.follow_id = #{userId}
          AND u1.user_id != #{userId}


    </select>

    <!-- 팔로우 받기 -->
    <insert id="insertReceivedFollow" >
        INSERT INTO follow (user_id, follow_id)
        VALUES (#{userId}, #{followId})
    </insert>

    <!-- 팔로우 취소 받기 -->
    <delete id="deleteReceivedFollow">
        DELETE FROM follow
        WHERE user_id = #{userId}
          AND follow_id = #{followId}
    </delete>

    <!-- 팔로우 받았는지 확인 -->
    <select id="isReceivedFollow" resultType="boolean">
        SELECT COUNT(*)
        FROM follow
        WHERE user_id = #{followId}
          AND follow_id = #{userId}
    </select>

    <!--   모든유저 호출  -->
    <select id="findAllUsers" resultType="com.kosa.todoup.dto.FollowDTO">
        SELECT
            user_id AS userId,
            email AS userEmail,
            nickname AS userNickname,
            avatar_type AS userAvatarType,
            password AS userPassword,
            lv,
            points AS points,
            created_at AS userCreatedAt
        FROM
            users
        WHERE
            user_id != #{userId}

    </select>

</mapper>
